name: Deploy to EC2

on:
  push:
    branches:
      - main  # Change this to your default branch if different

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@ec2-34-204-107-187.compute-1.amazonaws.com'bash -s' << EOF
        # Set environment variables from GitHub Secrets
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "SESSION_SECRET=${{ secrets.SESSION_SECRET }}" >> .env

          if [ ! -d "asp-bookstore" ]; then
          git clone https://github.com/DeviAgnes/asp-bookstore.git asp-bookstore
          fi

          cd asp-bookstore

          # Pull the latest changes from the Git repository
          git fetch origin main
          git pull origin main

          # Copy .env file from the GitHub repository to EC2
          echo "Copying .env file to EC2"
          cp ../.env ./.env
          # Stop the Docker container if it's running
          sudo docker stop asp-bookstore || true
          sudo docker rm asp-bookstore || true

          # Set environment variables from GitHub Secrets
          export DATABASE_URL="${{ secrets.DATABASE_URL }}"
          export SESSION_SECRET="${{ secrets.SESSION_SECRET }}"

          echo "Building new Docker image..."
          sudo docker build --no-cache -t asp-bookstore . || { echo "Docker build failed"; exit 1; }

          echo "Running new Docker container..."
          sudo docker run --env-file .env -d -p 3000:3000 --name asp-bookstore asp-bookstore || { echo "Failed to start Docker container"; exit 1; }

          echo "Deployment completed successfully!"
        EOF
